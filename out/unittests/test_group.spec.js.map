{"version":3,"sources":["../../src/unittests/test_group.spec.ts"],"names":["description","poptions","TestGroup","assert","TestGroupTest","UnitTest","g","test","fn","t0","seen","count","t","params","a","run","expect","Counter","doNestedThrow1","Error","doNestedThrow2","fail","res","search","logs","cases","undefined","l","toJSON","st","split","length","shouldThrow","_b","badChars","Array","from","char","result","status","TypeError","shouldReject"],"mappings":"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","sourcesContent":["export const description = `\nUnit tests for TestGroup.\n`;\n\nimport { Fixture } from '../common/framework/fixture.js';\nimport { poptions } from '../common/framework/params.js';\nimport { TestGroup } from '../common/framework/test_group.js';\nimport { assert } from '../common/framework/util/util.js';\n\nimport { TestGroupTest } from './test_group_test.js';\nimport { UnitTest } from './unit_test.js';\n\nexport const g = new TestGroup(TestGroupTest);\n\ng.test('UnitTest fixture').fn(async t0 => {\n  let seen = 0;\n  /* eslint-disable-next-line  @typescript-eslint/no-unused-vars */\n  function count(t: Fixture): void {\n    seen++;\n  }\n\n  const g = new TestGroup(UnitTest);\n\n  g.test('test').fn(count);\n  g.test('testp')\n    .params([{ a: 1 }])\n    .fn(count);\n\n  await t0.run(g);\n  t0.expect(seen === 2);\n});\n\ng.test('custom fixture').fn(async t0 => {\n  let seen = 0;\n  class Counter extends UnitTest {\n    count(): void {\n      seen++;\n    }\n  }\n\n  const g = new TestGroup(Counter);\n\n  g.test('test').fn(t => {\n    t.count();\n  });\n  g.test('testp')\n    .params([{ a: 1 }])\n    .fn(t => {\n      t.count();\n    });\n\n  await t0.run(g);\n  t0.expect(seen === 2);\n});\n\ng.test('stack').fn(async t0 => {\n  const g = new TestGroup(UnitTest);\n\n  const doNestedThrow1 = () => {\n    throw new Error('goodbye');\n  };\n\n  const doNestedThrow2 = () => doNestedThrow1();\n\n  g.test('fail').fn(t => {\n    t.fail();\n  });\n  /* eslint-disable-next-line  @typescript-eslint/no-unused-vars */\n  g.test('throw').fn(t => {\n    throw new Error('hello');\n  });\n  /* eslint-disable-next-line  @typescript-eslint/no-unused-vars */\n  g.test('throw nested').fn(t => {\n    doNestedThrow2();\n  });\n\n  const res = await t0.run(g);\n\n  const search = /unittests[/\\\\]test_group\\.spec\\.[tj]s|suites[/\\\\]unittests[/\\\\]unit_test\\.[tj]s/;\n  for (const { logs } of res.cases) {\n    assert(logs !== undefined, 'expected logs');\n    const l = logs[0].toJSON();\n    t0.expect(search.test(l));\n    const st = l.split('\\n');\n    t0.expect(search.test(st[st.length - 1]));\n  }\n});\n\ng.test('duplicate test name').fn(t => {\n  const g = new TestGroup(UnitTest);\n  g.test('abc').fn(() => {});\n\n  t.shouldThrow('Error', () => {\n    g.test('abc').fn(() => {});\n  });\n});\n\ng.test('duplicate test params').fn(t => {\n  const g = new TestGroup(UnitTest);\n\n  t.shouldThrow('Error', () => {\n    g.test('abc')\n      .params([\n        { a: 1 }, //\n        { a: 1 },\n      ])\n      .fn(() => {\n        //\n      });\n  });\n});\n\ng.test('duplicate test params/with different private params').fn(t => {\n  const g = new TestGroup(UnitTest);\n\n  t.shouldThrow('Error', () => {\n    g.test('abc')\n      .params([\n        { a: 1, _b: 1 }, //\n        { a: 1, _b: 2 },\n      ])\n      .fn(() => {\n        //\n      });\n  });\n});\n\nconst badChars = Array.from('\"`~@#$+=\\\\|!^&*[]<>{}-\\'.,');\ng.test('invalid test name')\n  .params(poptions('char', badChars))\n  .fn(t => {\n    const g = new TestGroup(UnitTest);\n\n    t.shouldThrow('Error', () => {\n      g.test('a' + t.params.char + 'b').fn(() => {});\n    });\n  });\n\ng.test('throws').fn(async t0 => {\n  const g = new TestGroup(UnitTest);\n\n  /* eslint-disable-next-line  @typescript-eslint/no-unused-vars */\n  g.test('a').fn(t => {\n    throw new Error();\n  });\n\n  const result = await t0.run(g);\n  t0.expect(result.cases[0].status === 'fail');\n});\n\ng.test('shouldThrow').fn(async t0 => {\n  t0.shouldThrow('TypeError', () => {\n    throw new TypeError();\n  });\n\n  const g = new TestGroup(UnitTest);\n\n  g.test('a').fn(t => {\n    t.shouldThrow('Error', () => {\n      throw new TypeError();\n    });\n  });\n\n  const result = await t0.run(g);\n  t0.expect(result.cases[0].status === 'fail');\n});\n\ng.test('shouldReject').fn(async t0 => {\n  t0.shouldReject(\n    'TypeError',\n    (async () => {\n      throw new TypeError();\n    })()\n  );\n\n  const g = new TestGroup(UnitTest);\n\n  g.test('a').fn(async t => {\n    t.shouldReject(\n      'Error',\n      (async () => {\n        throw new TypeError();\n      })()\n    );\n  });\n\n  const result = await t0.run(g);\n  // Fails even though shouldReject doesn't fail until after the test function ends\n  t0.expect(result.cases[0].status === 'fail');\n});\n"],"file":"test_group.spec.js"}