{"version":3,"sources":["../../../../src/common/runtime/helper/test_worker-worker.ts"],"names":["TestLoader","Logger","assert","log","loader","self","onmessage","ev","query","debug","data","files","Array","from","loadTests","length","f","rec","record","id","spec","cases","g","iterate","c","result","run","postMessage"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,2BAA3B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,MAAT,QAAuB,8BAAvB;AAGyB;AAEzB,MAAMC,GAAG,GAAG,IAAIF,MAAJ,EAAZ;AACA,MAAMG,MAAM,GAAG,IAAIJ,UAAJ,EAAf;;AAEAK,IAAI,CAACC,SAAL,GAAiB,MAAOC,EAAP,IAA4B;AAC3C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,EAAE,CAACG,IAA5B;AAEA,QAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,EAAW,MAAMT,MAAM,CAACU,SAAP,CAAiB,CAACN,KAAD,CAAjB,CAAjB,EAAd;AACAN,EAAAA,MAAM,CAACS,KAAK,CAACI,MAAN,KAAiB,CAAlB,EAAqB,qCAArB,CAAN;AAEA,QAAMC,CAAC,GAAGL,KAAK,CAAC,CAAD,CAAf;AACA,QAAM,CAACM,GAAD,IAAQd,GAAG,CAACe,MAAJ,CAAWF,CAAC,CAACG,EAAb,CAAd;AACAjB,EAAAA,MAAM,CAAC,OAAOc,CAAC,CAACI,IAAV,EAAgB,iCAAhB,CAAN;AAEA,QAAMC,KAAK,GAAGT,KAAK,CAACC,IAAN,CAAWG,CAAC,CAACI,IAAF,CAAOE,CAAP,CAASC,OAAT,CAAiBN,GAAjB,CAAX,CAAd;AACAf,EAAAA,MAAM,CAACmB,KAAK,CAACN,MAAN,KAAiB,CAAlB,EAAqB,qCAArB,CAAN;AACA,QAAMS,CAAC,GAAGH,KAAK,CAAC,CAAD,CAAf;AAEA,QAAMI,MAAM,GAAG,MAAMD,CAAC,CAACE,GAAF,CAAMjB,KAAN,CAArB;AAEAJ,EAAAA,IAAI,CAACsB,WAAL,CAAiB;AAAEnB,IAAAA,KAAF;AAASiB,IAAAA;AAAT,GAAjB;AACD,CAjBD","sourcesContent":["import { TestLoader } from '../../framework/loader.js';\nimport { Logger } from '../../framework/logger.js';\nimport { assert } from '../../framework/util/util.js';\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ndeclare const self: any; // should be DedicatedWorkerGlobalScope\n\nconst log = new Logger();\nconst loader = new TestLoader();\n\nself.onmessage = async (ev: MessageEvent) => {\n  const { query, debug } = ev.data;\n\n  const files = Array.from(await loader.loadTests([query]));\n  assert(files.length === 1, 'worker query resulted in != 1 files');\n\n  const f = files[0];\n  const [rec] = log.record(f.id);\n  assert('g' in f.spec, 'worker query resulted in README');\n\n  const cases = Array.from(f.spec.g.iterate(rec));\n  assert(cases.length === 1, 'worker query resulted in != 1 cases');\n  const c = cases[0];\n\n  const result = await c.run(debug);\n\n  self.postMessage({ query, result });\n};\n"],"file":"test_worker-worker.js"}